{"version":3,"file":"static/js/250.f4648764.chunk.js","mappings":"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","sources":["components/FreeTrial/FreeTrial.styled.jsx","components/Integration/Integration.styled.jsx","pages/Authorization/ForgotPass.jsx","pages/Authorization/Login.styled.jsx","pages/Authorization/SignUp.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { BtnPrimary, BtnTerGrey } from '../../styles/UI/ButtonCTA';\n\nexport const TrialWrapper = styled.div`\n        margin: 6rem auto 0 auto;\n`;\n\nexport const TrialFrame = styled.div`\n        padding: 2.5rem 1.5rem;\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        gap: 2rem;\n        min-height: 212px;\n        min-width: 343px;\n        width: 100%;\n        height: 100%;\n        background-color: ${({ theme }) => theme.blockElement};\n        border-radius: var(--radii-1);\n\n        @media (min-width: 768px) {\n                padding: 4rem;\n                flex-flow: row nowrap;\n                justify-content: space-between;\n                align-items: flex-start;\n                max-width: 1216px;\n                max-height: 343px;\n        }\n`;\n\nexport const TextFrame = styled.section`\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: flex-start;\n`;\n\nexport const ButtonsFrame = styled.div`\n        display: flex;\n        gap: 0.5rem;\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        @media (min-width: 768px) {\n                gap: 0.8rem;\n                flex-flow: row nowrap;\n                justify-content: center;\n                align-items: center;\n        }\n`;\n\nexport const BtnActive = styled(BtnPrimary)`\n        min-width: 295px;\n        width: 100%;\n\n        @media (min-width: 768px) {\n                min-width: 128px;\n                width: 100%;\n        }\n`;\n\nexport const BtnMore = styled(BtnTerGrey)`\n        color: ${({ theme }) => theme.btn.secondary};\n        min-width: 295px;\n        width: 100%;\n        border: 1px solid var(--gray-300);\n        background-color: var(--white);\n\n        &:focus {\n                color: var(--gray-700);\n        }\n\n        &:hover {\n                border: 1px solid var(--gray-300);\n                background-color: var(--gray-50);\n                color: var(--gray-800);\n        }\n\n        @media (min-width: 768px) {\n                min-width: 128px;\n                width: 100%;\n        }\n`;\n","import styled from 'styled-components';\nimport { BtnPrimary } from '../../styles/UI/ButtonCTA';\n\nexport const Wrapper = styled.section`\n        margin: 3rem auto;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n`;\n\nexport const IconList = styled.div`\n        margin-bottom: 4rem;\n        padding: 0 11rem;\n        display: flex;\n        flex-flow: row wrap;\n        align-items: center;\n        justify-content: center;\n        max-width: 1216px;\n`;\n\nexport const BtnMain = styled(BtnPrimary)`\n        min-width: 192px;\n        width: 100%;\n`;\n\nexport const BtnWrapper = styled(Wrapper)`\n        margin: 0 auto;\n`;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { Container } from '../../styles/Container';\nimport { TextErrorSm, TextNormalSm, LinkSmMd, HeadingSmSbBase, SubHeadTextMdNorm } from '../../styles/UI/Text';\nimport { LoginText, LoginBtn, LoginIcon } from './Login.styled';\nimport { SignUpForm, SignUpBlock, InputBlock, ErrorBlock, Wrapper, TextSeparator } from './SignUp.styled';\nimport { useAuth } from '../../context/AuthContext';\nimport { SpinnerXl } from '../../styles/UI/Spinners';\nimport { pageTransitionSingle } from '../../animation/page';\n\nconst ForgotPass = () => {\n        const { currentUser, error, responseMessage, isLoading, sendResetEmail } = useAuth();\n\n        const navigate = useNavigate();\n\n        const {\n                register,\n                formState: { errors },\n                handleSubmit,\n                reset,\n        } = useForm({ mode: 'onBlur' });\n\n        const onSubmit = async (data) => {\n                const { email } = data;\n                // send password reset link on email\n                if (email) await sendResetEmail(email);\n\n                reset();\n        };\n\n        useEffect(() => {\n                window.scrollTo(0, 0);\n        }, []);\n\n        //  === Error Styling ===\n\n        const errorEmail = errors?.email && {\n                marginBottom: '0',\n                border: '1px solid var(--error-500)',\n        };\n\n        return (\n                <Wrapper\n                        as={motion.section}\n                        initial=\"hidden\"\n                        animate=\"enter\"\n                        exit=\"exit\"\n                        variants={pageTransitionSingle}\n                >\n                        <Container>\n                                {isLoading ? (\n                                        <SpinnerXl />\n                                ) : (\n                                        <SignUpBlock>\n                                                <LoginText>\n                                                        <h1>ðŸ¤«</h1>\n                                                        <HeadingSmSbBase>Restore Your Password</HeadingSmSbBase>\n                                                        <SubHeadTextMdNorm style={{ margin: '1rem 0 3rem 0' }}>\n                                                                Type your email address\n                                                        </SubHeadTextMdNorm>\n                                                </LoginText>\n\n                                                <SignUpForm onSubmit={handleSubmit(onSubmit)}>\n                                                        {/* EMAIL */}\n                                                        <label htmlFor=\"email\">E-mail</label>\n                                                        <InputBlock style={errorEmail}>\n                                                                <input\n                                                                        placeholder=\"Enter your e-mail\"\n                                                                        {...register('email', {\n                                                                                required: 'Email is required',\n                                                                                pattern: {\n                                                                                        value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                                                                        message: 'Invalid email address',\n                                                                                },\n                                                                        })}\n                                                                />\n                                                        </InputBlock>\n                                                        {/* ERROR MESSAGE */}\n                                                        <ErrorBlock>\n                                                                {errors?.email && (\n                                                                        <TextErrorSm>\n                                                                                {errors?.email?.message ||\n                                                                                        'Hm... something went wrong'}\n                                                                        </TextErrorSm>\n                                                                )}\n\n                                                                {error && (\n                                                                        <TextErrorSm>\n                                                                                {errors?.message ||\n                                                                                        'Hm... something went wrong'}\n                                                                        </TextErrorSm>\n                                                                )}\n                                                                {responseMessage && (\n                                                                        <TextNormalSm>{responseMessage}</TextNormalSm>\n                                                                )}\n                                                        </ErrorBlock>\n\n                                                        {/* BUTTONS */}\n                                                        <TextSeparator>\n                                                                {responseMessage && (\n                                                                        <LinkSmMd to=\"/login\">Log In</LinkSmMd>\n                                                                )}\n                                                        </TextSeparator>\n                                                        <LoginBtn type=\"submit\">Reset Password</LoginBtn>\n\n                                                        <TextSeparator>\n                                                                <TextNormalSm>Create new account?</TextNormalSm>\n\n                                                                <LinkSmMd to=\"/signup\">Sign Up</LinkSmMd>\n                                                        </TextSeparator>\n                                                </SignUpForm>\n                                        </SignUpBlock>\n                                )}\n                        </Container>\n                </Wrapper>\n        );\n};\n\nexport default ForgotPass;\n","import styled from 'styled-components';\nimport { BtnMore } from '../../components/FreeTrial/FreeTrial.styled';\nimport { BtnMain } from '../../components/Integration/Integration.styled';\n\nexport const Wrapper = styled.section`\n        margin: 5rem auto;\n        height: 100vh;\n`;\n\nexport const LoginBlock = styled.div`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-flow: column nowrap;\n`;\n\nexport const LoginText = styled.div`\n        text-align: center;\n`;\n\nexport const LoginForm = styled.form`\n        max-height: 500px;\n        display: flex;\n        flex-flow: column wrap;\n        justify-content: center;\n        align-items: center;\n\n        label {\n                color: ${({ theme }) => theme.fontColorBase};\n                display: block;\n                font-size: var(--text-sm);\n                line-height: var(--text-lh-sm);\n                font-family: var(--ff);\n                font-weight: var(--fw-medium);\n        }\n\n        input {\n                color: var(--gray-500);\n                font-size: var(--text-md);\n                line-height: var(--text-lh-md);\n                font-family: var(--ff);\n                font-weight: var(--fw-normal);\n                margin-top: 0.375rem;\n                margin-bottom: 1.5rem;\n                min-width: 343px;\n                min-height: 44px;\n                display: block;\n                height: 100%;\n                padding: 0.6rem 0.8rem;\n                border: 1px var(--gray-300) solid;\n                border-radius: var(--radii);\n                box-shadow: var(--shadow-xs);\n        }\n\n        input::placeholder {\n                color: var(--gray-500);\n                font-size: var(--text-md);\n                line-height: var(--text-lh-md);\n                font-family: var(--ff);\n                font-weight: var(--fw-normal);\n        }\n\n        div {\n                display: flex;\n                flex-flow: row wrap;\n                align-items: center;\n                justify-content: space-between;\n                gap: 0.5rem;\n        }\n`;\n\nexport const LoginBtn = styled(BtnMain)`\n        margin: 0 auto;\n        margin-top: 1.5rem;\n        min-width: 343px;\n        max-width: 400px;\n        width: 100%;\n`;\nexport const LoginIcon = styled(BtnMore)`\n        margin: 0 auto;\n        margin-top: 1.5rem;\n        min-width: 343px;\n        max-width: 400px;\n        width: 100%;\n        margin-top: 1rem;\n        vertical-align: middle;\n        min-width: 343px;\n        img {\n                vertical-align: middle;\n                padding-right: 0.5rem;\n        }\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n        margin: 2rem auto;\n        height: 100vh;\n        overflow: scroll;\n`;\n\nexport const SignUpForm = styled.form`\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n        flex-flow: column nowrap;\n        label {\n                color: ${({ theme }) => theme.fontColorBase};\n                display: block;\n                font-size: var(--text-sm);\n                line-height: var(--text-lh-sm);\n                font-family: var(--ff);\n                font-weight: var(--fw-medium);\n        }\n`;\n\nexport const SignUpBlock = styled.section`\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-flow: column nowrap;\n`;\n\nexport const InputBlock = styled.div`\n        margin: 0 auto;\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        flex-flow: row nowrap;\n        color: var(--gray-500);\n        font-size: var(--text-md);\n        line-height: var(--text-lh-md);\n        font-family: var(--ff);\n        font-weight: var(--fw-normal);\n        margin-top: 0.375rem;\n        margin-bottom: 1.5rem;\n        background-color: var(--white);\n        width: 100%;\n        max-width: 343px;\n        min-height: 44px;\n        height: 100%;\n\n        padding: 0.6rem 0.8rem;\n        border: 1px var(--gray-300) solid;\n        border-radius: var(--radii);\n        box-shadow: var(--shadow-xs);\n\n        input {\n                max-width: 343px;\n                width: 100%;\n                background-color: transparent;\n                border: hidden;\n                outline: none;\n        }\n\n        input::placeholder {\n                color: var(--gray-500);\n                font-size: var(--text-md);\n                line-height: var(--text-lh-md);\n                font-family: var(--ff);\n                font-weight: var(--fw-normal);\n        }\n\n        i {\n                cursor: pointer;\n                color: var(--gray-500);\n\n                &:hover {\n                        color: var(--gray-700);\n                }\n        }\n`;\n\nexport const ErrorBlock = styled.div`\n        margin: 0 auto;\n        max-width: 343px;\n        text-align: center;\n`;\n\nexport const TextSeparator = styled.div`\n        margin: 0 auto;\n        display: flex;\n        flex-flow: row wrap;\n        justify-content: space-between;\n        align-items: center !important;\n        gap: 0.5rem;\n`;\n"],"names":["TrialWrapper","styled","TrialFrame","theme","blockElement","TextFrame","ButtonsFrame","BtnActive","BtnPrimary","BtnMore","BtnTerGrey","btn","secondary","Wrapper","IconList","BtnMain","BtnWrapper","useAuth","error","currentUser","responseMessage","isLoading","sendResetEmail","useNavigate","useForm","mode","register","errors","formState","handleSubmit","reset","onSubmit","data","email","useEffect","window","scrollTo","errorEmail","marginBottom","border","as","motion","initial","animate","exit","variants","pageTransitionSingle","style","margin","htmlFor","placeholder","required","pattern","value","message","Te","to","type","LoginText","LoginBtn","fontColorBase","LoginIcon","SignUpForm","SignUpBlock","InputBlock","ErrorBlock","TextSeparator"],"sourceRoot":""}